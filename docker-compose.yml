
services:
  vault:
    image: hashicorp/vault:1.15.3
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    volumes:
      - vault_data:/vault
    restart: always
    networks:
      - internal_backend
      - only_dev

  vault_init: 
    build:
      context: ./vault
      dockerfile: vault_init.Dockerfile
    depends_on:
      - vault
    environment:
      VAULT_ADDR: http://vault:8200
    restart: "no"
    networks:
      - internal_backend



  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - traefik_public
      - default

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    depends_on:
      - vault
    networks:
      - internal_backend

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: supersecure
      PGADMIN_CONFIG_SERVER_MODE: 'True'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    restart: always
    networks:
      - internal_backend
      - default

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    restart: always
    networks:
      - internal_backend
      - only_dev

  portainer_agent:
    image: portainer/agent:latest
    ports:
      - "9001:9001"
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    deploy:
      mode: global
    restart: always
    networks:
      - agent_network
      - default

  backend:
    build:
      context: https://github.com/Jefmans/backend.git
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=PathPrefix(`/api`, `/_event`, `/_upload`, `/ping`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    depends_on:
      - postgres
      - vault
    restart: always
    networks:
      - internal_backend
      - traefik_public

  # reflex-backend:
  #   build:
  #     context: https://github.com/Jefmans/reflex.git
  #     dockerfile: backend.Dockerfile
  #   depends_on:
  #     - postgres
  #   networks:
  #     - internal_backend
  #   restart: always

  # reflex-frontend:
  #   build:
  #     context: https://github.com/Jefmans/reflex.git
  #     dockerfile: frontend.Dockerfile
  #   depends_on:
  #     - reflex-backend
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.reflex.rule=Host(`65.109.170.93`)"
  #     - "traefik.http.routers.reflex.entrypoints=web"
  #     - "traefik.http.services.reflex.loadbalancer.server.port=80"
  #     - "traefik.docker.network=traefik_public"
  #   networks:
  #     - traefik_public
  #     - internal_backend
  #   restart: always


  # reflex_app:
  #   build:
  #     context: https://github.com/Jefmans/new_front.git
  #     dockerfile: Dockerfile
  #   container_name: reflex_app
  #   environment:
  #     - API_URL=http://65.109.170.93:8000  # Update with your IP address
  #   expose:
  #     - "3000"
  #     - "8000"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.reflex_front.rule=Host(`65.109.170.93`)"  # Use the IP here
  #     - "traefik.http.routers.reflex_front.entrypoints=websecure"
  #     - "traefik.http.services.reflex_front.loadbalancer.server.port=3000"
  #     - "traefik.http.routers.reflex_back.rule=Host(`65.109.170.93`) && (PathPrefix(`/_event`) || PathPrefix(`/_upload`) || PathPrefix(`/ping`))"
  #     - "traefik.http.routers.reflex_back.entrypoints=websecure"
  #     - "traefik.http.services.reflex_back.loadbalancer.server.port=8000"




  angular-app:
    build:
      context: https://github.com/Jefmans/my-angular-app.git
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - app-network




volumes:
  pgdata:
  vault_data:
  pgadmin_data:

networks:
  agent_network:
  internal_backend:
    internal: true
  only_dev:
  traefik_public:
  app-network:
    driver: bridge
