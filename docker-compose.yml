
services:
  vault:
    image: hashicorp/vault:1.15.3
    container_name: vault
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: root
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    volumes:
      - vault_data:/vault
    restart: always

  vault_init:
    image: hashicorp/vault:1.15.3
    depends_on:
      - vault
    # entrypoint: ["/bin/sh", "-c", "/vault/init.sh"]
    entrypoint: ["/bin/sh", "-c", "chmod +x /vault/init.sh && /vault/init.sh"]
    volumes:
      - ./vault/init.sh:/vault/init.sh
    environment:
      VAULT_ADDR: http://vault:8200
    restart: "no"


  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  backend:
    build:
        context: "https://github.com/Jefmans/backend.git"
        dockerfile: Dockerfile  # only if Dockerfile is in a subf>    
    command: gunicorn app.main:app -w 4 -k uvicorn.workers.Uvicor>    
    labels: 
      - "traefik.http.routers.backend.rule=PathPrefix(/api)"
    # env_file:
    #   - .env
    environment:
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    depends_on:
      - vault
      - postgres
      - elasticsearch
    restart: always

#  frontend:
#    build: ./frontend
#    command: reflex run --port 3000 --frontend-only
#    labels:
#      - "traefik.http.routers.frontend.rule=PathPrefix(/)"
#    restart: always



  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    restart: always

  # portainer:
  #   image: portainer/portainer-ce:latest
  #   command: -H unix:///var/run/docker.sock
  #   ports:
  #     - "9000:9000"
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer_data:/data
  #   restart: always


  portainer_agent:
    image: portainer/agent:latest
    ports:
      - "9001:9001"
    environment:
      AGENT_CLUSTER_ADDR: tasks.portainer_agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_network
    deploy:
      mode: global
    restart: always



  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always



  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8081:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@localhost.com
      PGADMIN_DEFAULT_PASSWORD: supersecure
      PGADMIN_CONFIG_SERVER_MODE: 'False'  # Needed to enable preload
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    restart: always


volumes:
  pgdata:
  portainer_data:
  vault_data:
  pgadmin_data:


networks:
  agent_network: